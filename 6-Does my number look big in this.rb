# https://www.codewars.com/kata/5287e858c6b5a9678200083c/train/ruby
#
# A Narcissistic Number is a positive number which is the sum of its own digits, each raised to the power of the number of digits in a given base. In this Kata, we will restrict ourselves to decimal (base 10).
#
#   For example, take 153 (3 digits), which is narcisstic:
#
#                                                1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153
# and 1652 (4 digits), which isn't:
#
#     1^4 + 6^4 + 5^4 + 2^4 = 1 + 1296 + 625 + 16 = 1938
# The Challenge:
#
# Your code must return true or false (not 'true' and 'false') depending upon whether the given number is a Narcissistic number in base 10. This may be True and False in your language, e.g. PHP.
#
# Error checking for text strings or other invalid inputs is not required, only valid positive non-zero integers will be passed into the function.
#
def narcissistic?(value)
  arr = value.digits
  k = arr.length
  val_new = arr.map { |x| x**k}.sum
  value == val_new
end

# Решения codewars
#
# Реш 1 - в короткой записи
# def narcissistic?(n)
#   n == n.digits.map { |d| d**n.digits.size } .sum
# end
#
# Реш 2
# def narcissistic?( value )
#   value == value.to_s.chars.map { |x| x.to_i**value.to_s.size }.reduce(:+)
# end
#
# Реш 3
# def narcissistic?(num)
#   digits = num.digits
#   num == digits.map { |d| d ** digits.size }.reduce(:+)
# end
#
# Реш 4
# ALL_POSSIBLE_BASE10_NARCISSISTIC_NUMBERS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 153, 370, 371, 407, 1634, 8208, 9474, 54748, 92727, 93084, 548834, 1741725, 4210818, 9800817, 9926315, 24678050, 24678051, 88593477, 146511208, 472335975, 534494836, 912985153, 4679307774, 32164049650, 32164049651, 40028394225, 42678290603, 44708635679, 49388550606, 82693916578, 94204591914, 28116440335967, 4338281769391370, 4338281769391371, 21897142587612075, 35641594208964132, 35875699062250035, 1517841543307505039, 3289582984443187032, 4498128791164624869, 4929273885928088826, 63105425988599693916, 128468643043731391252, 449177399146038697307, 21887696841122916288858, 27879694893054074471405, 27907865009977052567814, 28361281321319229463398, 35452590104031691935943, 174088005938065293023722, 188451485447897896036875, 239313664430041569350093, 1550475334214501539088894, 1553242162893771850669378, 3706907995955475988644380, 3706907995955475988644381, 4422095118095899619457938, 121204998563613372405438066, 121270696006801314328439376, 128851796696487777842012787, 174650464499531377631639254, 177265453171792792366489765, 14607640612971980372614873089, 19008174136254279995012734740, 19008174136254279995012734741, 23866716435523975980390369295, 1145037275765491025924292050346, 1927890457142960697580636236639, 2309092682616190307509695338915, 17333509997782249308725103962772, 186709961001538790100634132976990, 186709961001538790100634132976991, 1122763285329372541592822900204593, 12639369517103790328947807201478392, 12679937780272278566303885594196922, 1219167219625434121569735803609966019, 12815792078366059955099770545296129367, 115132219018763992565095597973971522400, 115132219018763992565095597973971522401]
#
# def narcissistic? value
#   ALL_POSSIBLE_BASE10_NARCISSISTIC_NUMBERS.include? value
# end